#Set context root
server.contextPath=/user
server.port=8081
app.timezone=UTC
security.sessions:NEVER
spring.redis.host=localhost
spring.redis.port=6379
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
flyway.enabled=false
flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.table=egov_user_schema_version
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/postgres
flyway.locations=db/migration/ddl,db/migration/seed,db/migration/dev

flyway.out-of-order=true
flyway.ignore-missing-migrations = true

egov.user.search.default.size=10
egov.otp.host=http://localhost:8089/
egov.services.otp.search_otp=otp/v1/_search
egov.services.otp.validate_otp=otp/v1/_validate
egov.services.accesscontrol.host=https://dev.digit.org
egov.services.accesscontrol.action_search=/access/v1/actions/_search
egov.filestore.host=http://localhost:8083
egov.filestore.path=filestore/v1/files/url
mdms.roles.filter=[?(@.code IN [$code])]
mdms.roles.masterName=roles
mdms.roles.moduleName=ACCESSCONTROL-ROLES
mdms.host=https://dev.digit.org
mdms.path=/egov-mdms-service/v1/_search
citizen.login.password.otp.enabled=true
employee.login.password.otp.enabled=false
citizen.login.password.otp.fixed.value=123456
citizen.login.password.otp.fixed.enabled=false
otp.validation.register.mandatory=true
access.token.validity.in.minutes=10080
refresh.token.validity.in.minutes=20160
default.password.expiry.in.days=90
mobile.number.validation.workaround.enabled=false
roles.state.level.enabled=true
#user.service.host=https://dev.digit.org
egov.user.host=http://egov-user.egov:8080
citizen.registration.withlogin.enabled=true
#password-policy
egov.user.name.pattern=^[^\\$\"'<>?\\\\~`!@#$%^()+={}\\[\\]*,.:;“”‘’]*$
egov.user.pwd.pattern=((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%])(?=\\S+$).*$)
egov.user.pwd.pattern.min.length=8
egov.user.pwd.pattern.max.length=15
logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
egov.mdms.actions=actions-test
tracer.detailed.tracing.enabled=true
tracer.errors.sendToKafka=false
account.unlock.cool.down.period.minutes=60
max.invalid.login.attempts.period.minutes=30
max.invalid.login.attempts=5
create.user.validate.name=true
#------------egov-enc-service config----------------#
egov.enc.host=http://localhost:1234
egov.enc.encrypt.endpoint=/egov-enc-service/crypto/v1/_encrypt
egov.enc.decrypt.endpoint=/egov-enc-service/crypto/v1/_decrypt
#----------------MDMS config---------------------#
egov.mdms.host=https://qa.digit.org
egov.mdms.search.endpoint=/egov-mdms-service/v1/_search
state.level.tenant.id=pb
#-----------Kafka Audit Topic Name------------#
kafka.topic.audit=audit_data

kafka.topics.notification.mail.name=egov.core.notification.email
kafka.topics.notification.sms.topic.name=egov.core.notification.sms

#------------Kafka Config----------------------#
kafka.config.bootstrap_server_config=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=10

#--------enable/disable ABAC in encryption----------#
decryption.abac.enabled=true

#-------------egov-localization-service-------------#
egov.localization.host=https://dev.digit.org/
egov.localization.search.endpoint=localization/messages/v1/_search
egov.localization.module=egov-user
egov.localization.default.locale=en_IN

key.generator.hash.algorithm=MD5


# central-instance configs
state.level.tenantid.length=2
is.environment.central.instance=true
state.schema.index.position.tenantid=1
